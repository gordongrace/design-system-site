# Node CircleCI 2.0 configuration file to DTA cloud 2.0
version: 2
jobs:
    build-designsystem:
        docker:
            - image: circleci/node:8.12.0
        working_directory: ~/designsystem
        steps:
            - checkout
            - restore_cache:
                name: Restore node_modules from cache
                keys:
                  - v2-npm-deps-{{ checksum "package.json" }}
            - run:
                name: Install Nodejs dependencies
                command: npm install
            - save_cache:
                name: Save node_modules to cache
                key: v2-npm-deps-{{ checksum "package.json" }}
                paths:
                  - node_modules
            - persist_to_workspace:
                root: ~/designsystem
                paths:
                  - node_modules
                  - designsystem-web-client/node_modules

    test-search-api:
        docker:
            - image: circleci/node:8.12.0
        working_directory: ~/designsystem
        steps:
        - run:
            name: Change DIR to designsystem-search-api
            command: cd ~/designsystem/designsystem-search-api
        - run:
            name: Run the tests
            command: npm run test

    test-web-client:
        docker:
            - image: circleci/node:8.12.0
        working_directory: ~/designsystem
        steps:
        - run:
            name: Change DIR to designsystem-web-client
            command: cd ~/designsystem/designsystem-web-client
        - run:
            name: Generate static HTML!
            command: npm run build
        - run:
            name: Run the tests
            command: npm run test
        - persist_to_workspace:
            root: ~/designsystem-web-client
            paths:
              - site/
              - .deploy/

    deploy-web-client-staging:
      docker:
        - image: govau/cf-cli
      steps:
        - attach_workspace:
            at: ~/designsystem
        - run:
            name: Deploy to cloud.gov.au
            command: |
              cd ~/designsystem
              mkdir -p deploy/
              mv site/ deploy/
              mv server deploy/
              mv content deploy/
              mv package.json deploy/
              mv package-lock.json deploy/
              mv .deploy/manifest-staging.yml deploy/
              cd deploy/
              cf login -a $CF_API_STAGING -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
              cf zero-downtime-push designsystem -f manifest-staging.yml


    # DEPLOY-PROD JOB
    # installing dependencies, building assets and deploying to production
    deploy-web-client-prod:
      docker:
        - image: govau/cf-cli
      steps:
        - attach_workspace:
            at: ~/designsystem
        - run:
            name: Deploy to cloud.gov.au
            command: |
              cd ~/designsystem
              mkdir -p deploy/
              mv site/ deploy/
              mv server deploy/
              mv content deploy/
              mv package.json deploy/
              mv package-lock.json deploy/
              mv .deploy/manifest-prod.yml deploy/
              cd deploy/
              cf login -a $CF_API_PROD -o $CF_ORG_PROD -s $CF_SPACE_PROD -u $CF_USER_PROD -p $CF_PASSWORD_PROD
              cf zero-downtime-push designsystem -f manifest-prod.yml


    # DEPLOY-TEST JOB
    # installing dependencies, building assets and deploying to test branches
    deploy-web-client-test:
      docker:
        - image: govau/cf-cli
      steps:
        - attach_workspace:
            at: ~/designsystem
        - run:
            name: Deploy to cloud.gov.au
            command: |
              cd ~/designsystem
              mkdir -p deploy/
              mv site/ deploy/
              mv server deploy/
              mv content deploy/
              mv package.json deploy/
              mv package-lock.json deploy/
              mv .deploy/manifest-testing.yml deploy/
              cd deploy/
              cf login -a $CF_API_STAGING -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
              cf zero-downtime-push designsystem-$CIRCLE_BRANCH -f manifest-testing.yml
            

# OUR WORKFLOW
# this is where we orchestrate our jobs
workflows:
  version: 2
  designsystem:
    jobs:
      - build-designsystem
      - deploy-web-client-staging: # run deploy staging
          requires:
            - build-designsystem
            - test-web-client
          filters:
            branches:
              only: develop # and only on the `develop` branch

      - deploy-web-client-prod: # run deploy production
          requires:
            - build-designsystem
            - test-web-client
          filters:
            branches:
              only: master # and only on the `master` branch

      - deploy-web-client-test: # run test branches
          requires:
            - build-designsystem
            - test-web-client
          filters:
            branches:
              only: /.*-test/ # and only on the branches that end with `-test`

  nightly-web-client-rebuild: # rerun a task via scheduling, all times are UTC https://circleci.com/docs/2.0/workflows/#scheduling-a-workflow
    triggers:
      - schedule:
          cron: "0 14 * * *" # 2PM utc => 1am or midnight (daylight saving)
          filters:
            branches:
              only: master # we only run the master branch
    jobs:
      - build-designsystem
      - test-web-client
      - deploy-prod: # run deploy production
          requires:
            - build-designsystem
            - test-web-client
          filters:
            branches:
              only: master # and only on the `master` branch
